
"set the no vi combatible
set nocompatible

"set syntax
syntax on

"set colorscheme
colorscheme molokai

"begin pathogen
execute pathogen#infect()

"set commande aliases
":command Ctermsplit ConquTermSplit bash
command Ctermvsplit ConqueTermVSplit bash
":command W w
":command Tab s/\t/    /g
"nmap :Ctermvsplit :ConqueTermVSplit bash
nmap :W :w
nmap :Tab :s/\t/    /g

" set leader key to \
let mapleader = "\\"

"nunmap <leader>s

"set leader key mappings
nnoremap <leader>c :Ctermvsplit<cr>
nnoremap <leader>n :NERDTreeToggle<cr>
nnoremap <leader>v :vsplit $MYVIMRC<cr>
nnoremap <leader>s :source $MYVIMRC<cr>
nnoremap <leader>w <C-w><C-w>

"set tab size to 4
set tabstop=4
set ts=4
set softtabstop=4
set shiftwidth=4
set expandtab
"set smarttab
set smartindent


" auto indent
set autoindent

" This is for filetype specific behavior (i.e. python is different than c++)
filetype indent plugin on

" turn on line numbers
set number

"set statusline
set laststatus=2
set statusline=%t%m

" chage vimdiff colors
"if &diff
    highlight DiffAdd ctermbg=red ctermfg=black
    highlight DiffChange ctermbg=red ctermfg=black
    highlight DiffDelete ctermbg=red ctermfg=black
"endif
    

" set folding
set foldmethod=indent
"set foldnestmax=2
set nofoldenable


" save foldings
au BufWinLeave * silent! mkview
au BufWinenter * silent! loadview


"function to scroll down
function LazyScrollDown()
    let botLine = line("$")
    if getpos('.')[1] == botLine
        echom "Already at bottom!"
        return
    endif
    let c = winheight(0) - 5
    normal! L
    while c > 0 && getpos('.')[1] != botLine
        normal! j
        redraw
        sleep 20m
        let c -= 1
    endwhile
endfunction

"function to scroll up
function LazyScrollUp()
    let topLine = 1
    if getpos('.')[1] == topLine
        echom "Already at top!"
        return
    endif
    let c = winheight(0) - 5
    normal! H
    while c > 0 && getpos('.')[1] != topLine
        normal! k
        redraw
        sleep 20m
        let c -= 1
    endwhile
endfunction

" remap keys to functions
nnoremap J :call LazyScrollDown()<cr>
nnoremap K :call LazyScrollUp()<cr>

